# Docker Compose for Scotty Observability Stack
#
# This file provides the observability infrastructure for Scotty:
# - OpenTelemetry Collector: Receives traces and metrics via OTLP
# - VictoriaMetrics: Lightweight time-series database for metrics
# - Grafana: Visualization and dashboards
#
# Usage:
#   docker-compose -f docker-compose.yml -f docker-compose.observability.yml up
#
# Access:
#   - Grafana: http://grafana.ddev.site (admin/admin)
#   - VictoriaMetrics UI: http://vm.ddev.site
#   - Jaeger UI: http://jaeger.ddev.site (from base docker-compose.yml)
#
# Architecture:
#   Scotty → OTLP (4317) → OTel Collector ┬→ Jaeger (traces)
#                                          └→ VictoriaMetrics (metrics) → Grafana

services:
  # OpenTelemetry Collector
  # Receives OTLP traces and metrics, routes to appropriate backends
  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    container_name: scotty-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
      - "8888:8888"  # Prometheus metrics about the collector itself
    depends_on:
      - jaeger
      - victoriametrics
    restart: unless-stopped
    networks:
      - default
    labels:
      - "traefik.enable=false"

  # VictoriaMetrics
  # Lightweight time-series database for metrics storage
  # 10x more efficient than Prometheus
  victoriametrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: scotty-victoriametrics
    ports:
      - "8428:8428"  # HTTP API
    volumes:
      - vm-data:/victoria-metrics-data
    command:
      - "--storageDataPath=/victoria-metrics-data"
      - "--retentionPeriod=30d"  # Keep metrics for 30 days
      - "--httpListenAddr=:8428"
    restart: unless-stopped
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.victoriametrics.rule=Host(`vm.ddev.site`)"
      - "traefik.http.services.victoriametrics.loadbalancer.server.port=8428"

  # Grafana
  # Visualization and dashboarding for metrics and traces
  grafana:
    image: grafana/grafana:latest
    container_name: scotty-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://grafana.ddev.site
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - victoriametrics
      - jaeger
    restart: unless-stopped
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.ddev.site`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

volumes:
  vm-data:
    name: scotty-victoriametrics-data
  grafana-data:
    name: scotty-grafana-data

networks:
  default:
    name: ddev_default
    external: true

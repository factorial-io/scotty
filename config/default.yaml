debug: false
api:
  bind_address: "0.0.0.0:21342"
  access_token: "mysecret"
scheduler:
  running_app_check: "1m"
  ttl_check: "10m"
  task_cleanup: "3m"
telemetry: None
frontend_directory: ./frontend/build
apps:
  domain_suffix: "ddev.site"
  use_tls: false
  root_folder: "./apps" # Path to the folder where the apps are stored
  blueprints:
    nginx-lagoon:
      name: "NGINX using lagoon base images"
      description: "A simple NGINX container using lagoon base images"
      actions:
        post_create:
          nginx:
            - echo "Hello, World from post_create"
            - env
        post_rebuild:
          nginx:
            - echo "Hello, World from post_rebuild"
            - env
        post_run:
          nginx:
            - echo "Hello, World from post_run"
            - env
    drupal-lagoon:
      name: "Drupal using lagoon base images"
      description: "A simple Drupal application using lagoon base images (cli, php, nginx)"
      actions:
        post_create:
          cli:
            - drush deploy
        post_rebuild:
          cli:
            - drush deploy
        post_run:
          cli:
            - drush uli

docker:
  connection: local # local, socket or http, see bollard docs
  registries:
    factorial:
      registry: https://registry.factorial.io
      username: "deploybot"
      password: "deploybot" # Override with env SCOTTY__DOCKER__REGISTRIES__FACTORIAL__PASSWORD

load_balancer_type: Traefik #HaproxyConfig #HaproxyConfig or Traefik
traefik:
  network: "proxy"
  use_tls: true
  certresolver: "myresolver"
haproxy:
  use_tls: true

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - target/

# Prevent duplicate pipelines for commits to MRs and branches
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"
    - if: '$CI_COMMIT_TAG =~ /^\d+.\d+.\d+/'

# Deployments
deploy:queue:dev:
  stage: init
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "dev"'
  trigger:
    include:
      - local: .gitlab-ci/workflows/deploy.yml
    strategy: depend

deploy:queue:stage:
  stage: init
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "main" && $BACKUP != "TRUE"'
  trigger:
    include:
      - local: .gitlab-ci/workflows/deploy.yml
    strategy: depend

deploy:queue:tag:
  stage: init
  rules:
    - if: $CI_COMMIT_TAG
  trigger:
    include:
      - local: .gitlab-ci/workflows/deploy_tag.yml
    strategy: depend

# Merge request handling
merge_request:queue:
  stage: init
  variables:
    # This is a workaround to allow sub pipelines inside merge request.
    ENABLE_MERGE_REQUEST: "merge_request_event"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  trigger:
    include:
      - local: .gitlab-ci/workflows/merge_request.yml
    strategy: depend

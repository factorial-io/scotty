version: '3.8'

# Development compose file supporting both auth modes
# Switch between modes using SCOTTY_AUTH_MODE environment variable

services:
  # Traefik for routing (used in both modes)
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - scotty-dev
    profiles:
      - oauth
      - full

  # OAuth2-proxy (only for oauth mode)
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
    command:
      - --http-address=0.0.0.0:4180
      - --upstream=${SCOTTY_UPSTREAM:-http://scotty-oauth:3000}
      - --provider=gitlab
      - --client-id=${GITLAB_CLIENT_ID}
      - --client-secret=${GITLAB_CLIENT_SECRET}
      - --cookie-secret=${COOKIE_SECRET}
      - --cookie-secure=false
      - --cookie-httponly=true
      - --cookie-name=_oauth2_proxy
      - --cookie-expire=168h0m0s
      - --cookie-refresh=1h0m0s
      - --email-domain=*
      - --redirect-url=${OAUTH_REDIRECT_URL:-http://localhost/oauth2/callback}
      - --oidc-issuer-url=${GITLAB_URL:-https://gitlab.com}
      - --scope=openid
      - --pass-user-headers=true
      - --pass-access-token=true
      - --set-xauthrequest=true
      - --skip-provider-button=false
    environment:
      - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID}
      - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - GITLAB_URL=${GITLAB_URL:-https://gitlab.com}
      - OAUTH_REDIRECT_URL=${OAUTH_REDIRECT_URL:-http://localhost/oauth2/callback}
    labels:
      - "traefik.enable=true"
      # Single service definition to avoid conflicts
      - "traefik.http.services.oauth2-proxy.loadbalancer.server.port=4180"
      # OAuth2-proxy routes
      - "traefik.http.routers.oauth.rule=Host(`localhost`) && PathPrefix(`/oauth2`)"
      - "traefik.http.routers.oauth.entrypoints=web"
      - "traefik.http.routers.oauth.service=oauth2-proxy"
      # Main application routes (through oauth2-proxy)
      - "traefik.http.routers.scotty-main.rule=Host(`localhost`) && !PathPrefix(`/oauth2`)"
      - "traefik.http.routers.scotty-main.entrypoints=web"
      - "traefik.http.routers.scotty-main.service=oauth2-proxy"
      - "traefik.http.routers.scotty-main.middlewares=oauth-auth@docker"
      # OAuth auth middleware
      - "traefik.http.middlewares.oauth-auth.forwardauth.address=http://oauth2-proxy:4180/oauth2/auth"
      - "traefik.http.middlewares.oauth-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth-auth.forwardauth.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token"
    networks:
      - scotty-dev
    profiles:
      - oauth
      - full

  # Scotty in OAuth mode (behind oauth2-proxy)
  scotty-oauth:
    build:
      context: ../..
      dockerfile: Dockerfile
    environment:
      - SCOTTY__API__AUTH_MODE=oauth
      - SCOTTY__API__BIND_ADDRESS=0.0.0.0:3000
      - SCOTTY__API__OAUTH_REDIRECT_URL=/oauth2/start
    labels:
      - "traefik.enable=false"  # Disable direct access, only through oauth2-proxy
    networks:
      - scotty-dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../config/default.yaml:/app/config/default.yaml:ro
      - ./config-examples/oauth.yaml:/app/config/local.yaml:ro
      - ../../config/blueprints:/app/config/blueprints:ro
      - ./apps:/app/apps
    profiles:
      - oauth
      - full

  # Scotty in development mode (no auth)
  scotty-dev:
    build:
      context: ../..
      dockerfile: Dockerfile
    environment:
      - SCOTTY__API__AUTH_MODE=dev
      - SCOTTY__API__BIND_ADDRESS=0.0.0.0:3000
      - SCOTTY__API__DEV_USER_EMAIL=developer@localhost
      - SCOTTY__API__DEV_USER_NAME=Local Developer
    ports:
      - "3000:3000"  # Direct access for development
    networks:
      - scotty-dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../config/default.yaml:/app/config/default.yaml:ro
      - ./config-examples/development.yaml:/app/config/local.yaml:ro
      - ../../config/blueprints:/app/config/blueprints:ro
      - ./apps:/app/apps
    profiles:
      - dev
      - full

  # Scotty in bearer mode (traditional auth)
  scotty-bearer:
    build:
      context: ../..
      dockerfile: Dockerfile
    environment:
      - SCOTTY__API__AUTH_MODE=bearer
      - SCOTTY__API__BIND_ADDRESS=0.0.0.0:3000
      - SCOTTY__API__ACCESS_TOKEN=${SCOTTY_ACCESS_TOKEN:-demo-token-12345}
    ports:
      - "3001:3000"  # Different port to avoid conflicts
    networks:
      - scotty-dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../config/default.yaml:/app/config/default.yaml:ro
      - ./config-examples/bearer.yaml:/app/config/local.yaml:ro
      - ../../config/blueprints:/app/config/blueprints:ro
      - ./apps:/app/apps
    profiles:
      - bearer
      - full

networks:
  scotty-dev:
    driver: bridge